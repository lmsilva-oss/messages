# Default values for emqx-init-chart

##################################
## kube-prometheus-stack
##################################
kube-prometheus-stack:
  enabled: true

  grafana:
    enabled: false



##################################
## grafana
##################################
grafana:
  enabled: true

  adminUser: admin
  adminPassword: admin123

  grafana.ini:
    server:
      domain: af658517764474ba68d8546de190dcb7-1790545472.ap-southeast-1.elb.amazonaws.com
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      serve_from_sub_path: true

    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      check_for_updates: true
    log:
      mode: console
    grafana_net:
      url: https://grafana.net

##################################
## prometheus-pushgateway
##################################

prometheus-pushgateway:
  enabled: true

  serviceMonitor:
    enabled: true
    namespace: emqx-init

##################################
## emqx-ee
##################################

emqx-ee:
  enabled: true
  metrics:
    enabled: true
  emqxLoadedPlugins: >
    {emqx_management, true}.
    {emqx_recon, true}.
    {emqx_retainer, true}.
    {emqx_dashboard, true}.
    {emqx_telemetry, true}.
    {emqx_rule_engine, true}.
    {emqx_bridge_mqtt, false}.
    {emqx_prometheus, true}.

  service:
    ## Service type
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb

  emqxConfig:
    EMQX_PROMETHEUS__PUSH__GATEWAY__SERVER:  http://emqx-init-prometheus-pushgateway.emqx-init.svc.cluster.local:9091

##################################
## mongodb
##################################

mongodb:
  enabled: false

  auth:
    usernames: ["root"]
    passwords: ["public"]
    databases: ["mqtt"]

##################################
## redis
##################################

# https://artifacthub.io/packages/helm/bitnami/redis
redis:
  enabled: false

  global:
    redis:
      password: "public"

##################################
# postgresql
##################################

# https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  enabled: false

  global:
    postgresql:
      postgresqlUsername: "postgres"
      postgresqlPassword: "postgres"

  initdbScripts:
    init.sql: |
      CREATE USER chaos WITH PASSWORD 'public';
      CREATE DATABASE mqtt;
      GRANT ALL PRIVILEGES ON DATABASE mqtt TO chaos;
      \c mqtt chaos;
      CREATE TABLE t_mqtt_msg (
        id SERIAL primary key,
        msgid character varying(64),
        sender character varying(64),
        topic character varying(255),
        qos integer,
        payload text,
        arrived timestamp without time zone
      );

##################################
## kafka
##################################

kafka:
  enabled: true

  provisioning:
    enabled: true

    topics:
      - name: testTopic
        partitions: 1
        replicationFactor: 1
        config:
          max.message.bytes: 64000
          flush.messages: 1
